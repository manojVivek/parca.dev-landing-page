import PropTypes from 'prop-types';
import React from 'react';

const RustInactive = ({ className }) => (
  <svg
    className={className}
    width="1731"
    height="857"
    viewBox="0 0 1731 857"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <circle cx="146" cy="458" r="72" fill="url(#paint0_linear_1112_10475)" />
    <text
      fill="#181A1B"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Poppins"
      fontSize="14"
      fontWeight="500"
      letterSpacing="0em"
    >
      <tspan x="131.09" y="419.9">
        CPU
      </tspan>
    </text>
    <text
      fill="#181A1B"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Poppins"
      fontSize="44"
      fontWeight="300"
      letterSpacing="0em"
    >
      <tspan x="102.145" y="465.4">
        60%
      </tspan>
    </text>
    <text
      fill="#181A1B"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Poppins"
      fontSize="13"
      letterSpacing="0em"
    >
      <tspan x="117.704" y="488.55">
        Address:&#10;
      </tspan>
      <tspan x="114.117" y="504.55">
        0x4553e0
      </tspan>
    </text>
    <g filter="url(#filter0_ddd_1112_10475)">
      <rect x="248" y="171" width="800" height="451" rx="12" fill="#181A1B" />
    </g>
    <rect opacity="0.3" x="248" y="350" width="800" height="24" fill="#FD0054" />
    <rect opacity="0.1" x="297" y="208" width="1" height="414" fill="white" />
    <text
      opacity="0.4"
      fill="white"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Roboto Mono"
      fontSize="14"
      letterSpacing="0em"
    >
      <tspan x="264.184" y="239.938">
        73&#10;
      </tspan>
      <tspan x="264.184" y="260.938">
        74&#10;
      </tspan>
      <tspan x="264.184" y="281.938">
        75&#10;
      </tspan>
      <tspan x="264.184" y="302.938">
        76&#10;
      </tspan>
      <tspan x="264.184" y="323.938">
        77&#10;
      </tspan>
      <tspan x="264.184" y="344.938">
        78&#10;
      </tspan>
      <tspan x="264.184" y="365.938">
        79&#10;
      </tspan>
      <tspan x="264.184" y="386.938">
        80&#10;
      </tspan>
      <tspan x="264.184" y="407.938">
        81&#10;
      </tspan>
      <tspan x="264.184" y="428.938">
        82&#10;
      </tspan>
      <tspan x="264.184" y="449.938">
        83&#10;
      </tspan>
      <tspan x="264.184" y="470.938">
        84&#10;
      </tspan>
      <tspan x="264.184" y="491.938">
        85&#10;
      </tspan>
      <tspan x="264.184" y="512.938">
        86&#10;
      </tspan>
      <tspan x="264.184" y="533.938">
        87&#10;
      </tspan>
      <tspan x="264.184" y="554.938">
        88&#10;
      </tspan>
      <tspan x="264.184" y="575.938">
        89&#10;
      </tspan>
      <tspan x="264.184" y="596.938">
        90
      </tspan>
    </text>
    <path
      d="M248 183C248 176.373 253.373 171 260 171H1036C1042.63 171 1048 176.373 1048 183V207H248V183Z"
      fill="#181A1B"
    />
    <text
      fill="white"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Poppins"
      fontSize="14"
      fontWeight="600"
      letterSpacing="0em"
    >
      <tspan x="632.359" y="193.9">
        Rust
      </tspan>
    </text>
    <circle cx="270" cy="189" r="6" fill="#FD0054" />
    <circle cx="290" cy="189" r="6" fill="#FFB31A" />
    <circle cx="310" cy="189" r="6" fill="#00CC21" />
    <rect opacity="0.1" x="248" y="207" width="800" height="1" fill="white" />
    <text
      fill="white"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Roboto Mono"
      fontSize="14"
      letterSpacing="0em"
    >
      <tspan x="372.449" y="260.938">
        {' '}
      </tspan>
      <tspan x="431.307" y="260.938">
        (xs:{' '}
      </tspan>
      <tspan x="498.572" y="260.938">
        &#60;
      </tspan>
      <tspan x="532.205" y="260.938">
        &#60;$kind&#62;&#62;, k:{' '}
      </tspan>
      <tspan x="683.553" y="260.938">
        ) -&#62;{' '}
      </tspan>
      <tspan x="750.818" y="260.938">
        &#60;
      </tspan>
      <tspan x="801.268" y="260.938">
        &#62; {'{'}&#10;
      </tspan>
      <tspan x="322" y="281.938">
        {' '}
      </tspan>
      <tspan x="414.49" y="281.938">
        (xs.
      </tspan>
      <tspan x="473.348" y="281.938">
        (){' '}
      </tspan>
      <tspan x="515.389" y="281.938">
        {' '}
        k);&#10;
      </tspan>
      <tspan x="322" y="302.938" />
      <tspan x="322" y="323.938">
        {' '}
      </tspan>
      <tspan x="380.857" y="323.938">
        {' '}
        n_per_cluster:{' '}
      </tspan>
      <tspan x="574.246" y="323.938">
        {' '}
        xs.
      </tspan>
      <tspan x="633.104" y="323.938">
        (){' '}
      </tspan>
      <tspan x="666.736" y="323.938">
        {' '}
        k;&#10;
      </tspan>
      <tspan x="322" y="344.938">
        {' '}
      </tspan>
      <tspan x="380.857" y="344.938">
        {' '}
        centroids:{' '}
      </tspan>
      <tspan x="540.613" y="344.938">
        &#60;$kind
      </tspan>
      <tspan x="322" y="365.938">
        {'        '}(
      </tspan>
      <tspan x="406.082" y="365.938">
        ..k).
      </tspan>
      <tspan x="473.348" y="365.938">
        (
      </tspan>
      <tspan x="490.164" y="365.938">
        j
      </tspan>
      <tspan x="506.98" y="365.938">
        {' '}
        xs[j{' '}
      </tspan>
      <tspan x="565.838" y="365.938">
        {' '}
        n_per_cluster].
      </tspan>
      <tspan x="742.41" y="365.938">
        ()).
      </tspan>
      <tspan x="834.9" y="365.938">
        ();&#10;
      </tspan>
      <tspan x="322" y="386.938" />
      <tspan x="322" y="407.938">
        {' '}
      </tspan>
      <tspan x="414.49" y="407.938">
        {' '}
        clustering{' '}
      </tspan>
      <tspan x="523.797" y="407.938">
        {' '}
      </tspan>
      <tspan x="675.145" y="407.938">
        (
      </tspan>
      <tspan x="691.961" y="407.938">
        xs,{' '}
      </tspan>
      <tspan x="734.002" y="407.938">
        centroids);&#10;
      </tspan>
      <tspan x="322" y="428.938" />
      <tspan x="322" y="449.938">
        {' '}
      </tspan>
      <tspan x="389.266" y="449.938">
        {' '}
        {'{'}&#10;
      </tspan>
      <tspan x="322" y="470.938">
        {' '}
      </tspan>
      <tspan x="414.49" y="470.938">
        {' '}
        centroids{' '}
      </tspan>
      <tspan x="515.389" y="470.938">
        {' '}
      </tspan>
      <tspan x="683.553" y="470.938">
        (
      </tspan>
      <tspan x="700.369" y="470.938">
        xs,{' '}
      </tspan>
      <tspan x="742.41" y="470.938">
        clustering, k);&#10;
      </tspan>
      <tspan x="322" y="491.938">
        {' '}
      </tspan>
      <tspan x="414.49" y="491.938">
        {' '}
        new_clustering{' '}
      </tspan>
      <tspan x="557.43" y="491.938">
        {' '}
      </tspan>
      <tspan x="708.777" y="491.938">
        (
      </tspan>
      <tspan x="725.594" y="491.938">
        xs,{' '}
      </tspan>
      <tspan x="767.635" y="491.938">
        centroids);&#10;
      </tspan>
      <tspan x="322" y="512.938" />
      <tspan x="322" y="533.938">
        {' '}
      </tspan>
      <tspan x="406.082" y="533.938">
        {' '}
        new_clustering&#10;
      </tspan>
      <tspan x="322" y="554.938">
        {' '}
      </tspan>
      <tspan x="464.939" y="554.938">
        ()&#10;
      </tspan>
      <tspan x="322" y="575.938">
        {' '}
      </tspan>
      <tspan x="456.531" y="575.938">
        (clustering.
      </tspan>
      <tspan x="591.062" y="575.938">
        ())&#10;
      </tspan>
      <tspan x="322" y="596.938">
        {'            '}.
      </tspan>
      <tspan x="456.531" y="596.938">
        (
      </tspan>
      <tspan x="473.348" y="596.938">
        (
      </tspan>
      <tspan x="490.164" y="596.938">
        za,{' '}
      </tspan>
      <tspan x="532.205" y="596.938">
        zb)| za{' '}
      </tspan>
      <tspan x="616.287" y="596.938">
        {' '}
        zb)
      </tspan>
    </text>
    <text
      fill="#798486"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Roboto Mono"
      fontSize="14"
      letterSpacing="0em"
    >
      <tspan x="322" y="239.938">
        /// Assign the N D-dimensional data, `xs`, to `k` clusters using K-Means clustering&#10;
      </tspan>
    </text>
    <text
      fill="#FFD500"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Roboto Mono"
      fontSize="14"
      letterSpacing="0em"
    >
      <tspan x="322" y="260.938">
        pub fn
      </tspan>
      <tspan x="473.348" y="260.938">
        Vec
      </tspan>
      <tspan x="506.98" y="260.938">
        Vec
      </tspan>
      <tspan x="641.512" y="260.938">
        usize
      </tspan>
      <tspan x="725.594" y="260.938">
        Vec
      </tspan>
      <tspan x="759.227" y="260.938">
        usize
      </tspan>
      <tspan x="498.572" y="281.938">
        &#62;=
      </tspan>
      <tspan x="355.633" y="323.938">
        let
      </tspan>
      <tspan x="515.389" y="323.938">
        usize =
      </tspan>
      <tspan x="658.328" y="323.938">
        /
      </tspan>
      <tspan x="355.633" y="344.938">
        let
      </tspan>
      <tspan x="481.756" y="344.938">
        Vec&#60;Vec
      </tspan>
      <tspan x="591.062" y="344.938">
        &#62;&#62; =&#10;
      </tspan>
      <tspan x="481.756" y="365.938">
        |
      </tspan>
      <tspan x="498.572" y="365.938">
        |
      </tspan>
      <tspan x="557.43" y="365.938">
        *
      </tspan>
      <tspan x="355.633" y="407.938">
        let mut
      </tspan>
      <tspan x="515.389" y="407.938">
        =
      </tspan>
      <tspan x="683.553" y="407.938">
        &#38;
      </tspan>
      <tspan x="725.594" y="407.938">
        &#38;
      </tspan>
      <tspan x="355.633" y="449.938">
        loop
      </tspan>
      <tspan x="389.266" y="470.938">
        let
      </tspan>
      <tspan x="506.98" y="470.938">
        =
      </tspan>
      <tspan x="691.961" y="470.938">
        &#38;
      </tspan>
      <tspan x="734.002" y="470.938">
        &#38;
      </tspan>
      <tspan x="389.266" y="491.938">
        let
      </tspan>
      <tspan x="549.021" y="491.938">
        =
      </tspan>
      <tspan x="717.186" y="491.938">
        &#38;
      </tspan>
      <tspan x="759.227" y="491.938">
        &#38;
      </tspan>
      <tspan x="389.266" y="533.938">
        if
      </tspan>
      <tspan x="431.307" y="596.938">
        all
      </tspan>
      <tspan x="464.939" y="596.938">
        |
      </tspan>
      <tspan x="481.756" y="596.938">
        &#38;
      </tspan>
      <tspan x="523.797" y="596.938">
        &#38;
      </tspan>
      <tspan x="599.471" y="596.938">
        ==
      </tspan>
    </text>
    <text
      fill="#FD6A00"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Roboto Mono"
      fontSize="14"
      letterSpacing="0em"
    >
      <tspan x="380.857" y="260.938">
        kmeans
      </tspan>
      <tspan x="448.123" y="281.938">
        len
      </tspan>
      <tspan x="607.879" y="323.938">
        len
      </tspan>
      <tspan x="448.123" y="365.938">
        map
      </tspan>
      <tspan x="700.369" y="365.938">
        clone
      </tspan>
      <tspan x="776.043" y="365.938">
        collect
      </tspan>
      <tspan x="532.205" y="407.938">
        nearest_centroids
      </tspan>
      <tspan x="523.797" y="470.938">
        recompute_centroids
      </tspan>
      <tspan x="565.838" y="491.938">
        nearest_centroids
      </tspan>
      <tspan x="422.898" y="554.938">
        .iter
      </tspan>
      <tspan x="422.898" y="575.938">
        .zip
      </tspan>
      <tspan x="557.43" y="575.938">
        iter
      </tspan>
    </text>
    <text
      fill="#F14AFF"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Roboto Mono"
      fontSize="14"
      letterSpacing="0em"
    >
      <tspan x="355.633" y="281.938">
        assert!
      </tspan>
      <tspan x="397.674" y="365.938">
        0
      </tspan>
    </text>
    <path
      d="M1022.69 570.24L1020.08 568.628C1020.06 568.375 1020.03 568.123 1020.01 567.87L1022.25 565.784C1022.48 565.572 1022.58 565.258 1022.52 564.954C1022.49 564.804 1022.42 564.664 1022.32 564.548C1022.22 564.432 1022.09 564.343 1021.95 564.289L1019.09 563.22C1019.01 562.973 1018.94 562.727 1018.86 562.482L1020.65 560.005C1020.74 559.881 1020.79 559.736 1020.81 559.585C1020.83 559.433 1020.81 559.279 1020.75 559.138C1020.69 558.997 1020.6 558.873 1020.48 558.779C1020.36 558.684 1020.22 558.621 1020.06 558.597L1017.04 558.106C1016.93 557.879 1016.81 557.653 1016.68 557.429L1017.95 554.648C1018.01 554.509 1018.04 554.356 1018.03 554.204C1018.02 554.052 1017.97 553.905 1017.88 553.778C1017.8 553.651 1017.68 553.548 1017.54 553.478C1017.41 553.409 1017.26 553.375 1017.1 553.381L1014.04 553.488C1013.88 553.29 1013.72 553.094 1013.55 552.901L1014.26 549.92C1014.29 549.772 1014.29 549.617 1014.25 549.47C1014.21 549.323 1014.13 549.189 1014.02 549.081C1013.91 548.973 1013.78 548.894 1013.63 548.852C1013.48 548.811 1013.33 548.807 1013.18 548.842L1010.19 549.545C1010 549.381 1009.8 549.22 1009.6 549.061L1009.71 546.001C1009.72 545.849 1009.68 545.697 1009.61 545.561C1009.54 545.425 1009.44 545.309 1009.31 545.224C1009.19 545.139 1009.04 545.088 1008.89 545.076C1008.73 545.064 1008.58 545.091 1008.44 545.155L1005.66 546.422C1005.43 546.299 1005.21 546.178 1004.98 546.059L1004.49 543.044C1004.46 542.893 1004.4 542.751 1004.3 542.632C1004.21 542.512 1004.08 542.419 1003.94 542.36C1003.8 542.302 1003.65 542.281 1003.5 542.298C1003.34 542.316 1003.2 542.372 1003.08 542.461L1000.59 544.244C1000.35 544.166 1000.1 544.092 999.854 544.021L998.783 541.161C998.73 541.018 998.641 540.89 998.524 540.791C998.408 540.692 998.268 540.624 998.118 540.594C997.968 540.564 997.812 540.573 997.667 540.62C997.521 540.667 997.39 540.751 997.286 540.863L995.196 543.102C994.944 543.074 994.69 543.048 994.436 543.028L992.822 540.424C992.742 540.294 992.629 540.187 992.496 540.113C992.362 540.039 992.212 540 992.059 540C991.906 540 991.756 540.039 991.623 540.113C991.489 540.187 991.377 540.294 991.296 540.424L989.682 543.028C989.428 543.048 989.174 543.074 988.922 543.102L986.831 540.863C986.727 540.751 986.596 540.668 986.45 540.621C986.305 540.574 986.15 540.565 986 540.595C985.849 540.625 985.71 540.692 985.593 540.791C985.477 540.891 985.388 541.018 985.335 541.161L984.263 544.021C984.015 544.092 983.77 544.167 983.525 544.244L981.042 542.461C980.917 542.372 980.773 542.316 980.621 542.299C980.469 542.281 980.315 542.303 980.174 542.361C980.033 542.419 979.909 542.513 979.814 542.632C979.719 542.751 979.656 542.893 979.631 543.044L979.138 546.059C978.911 546.177 978.685 546.299 978.46 546.422L975.675 545.155C975.535 545.091 975.382 545.064 975.23 545.077C975.078 545.089 974.931 545.14 974.804 545.225C974.545 545.397 974.394 545.691 974.406 546.001L974.513 549.061C974.314 549.22 974.118 549.381 973.924 549.545L970.938 548.842C970.789 548.807 970.634 548.811 970.487 548.853C970.34 548.895 970.206 548.973 970.097 549.081C969.989 549.189 969.91 549.323 969.868 549.47C969.826 549.616 969.823 549.772 969.858 549.92L970.561 552.901C970.398 553.094 970.237 553.29 970.078 553.488L967.013 553.381C966.86 553.375 966.708 553.409 966.572 553.478C966.435 553.548 966.319 553.651 966.234 553.778C966.149 553.905 966.098 554.052 966.086 554.204C966.074 554.356 966.101 554.509 966.165 554.648L967.435 557.429C967.31 557.653 967.189 557.879 967.071 558.106L964.05 558.597C963.899 558.621 963.757 558.684 963.637 558.779C963.517 558.874 963.424 558.997 963.365 559.138C963.307 559.279 963.285 559.433 963.303 559.585C963.321 559.736 963.377 559.881 963.466 560.005L965.253 562.482C965.175 562.727 965.1 562.973 965.029 563.22L962.164 564.289C962.02 564.343 961.893 564.432 961.793 564.548C961.694 564.664 961.626 564.804 961.597 564.954C961.567 565.104 961.576 565.259 961.623 565.404C961.67 565.549 961.754 565.68 961.866 565.784L964.108 567.87C964.08 568.122 964.055 568.375 964.034 568.628L961.426 570.24C961.296 570.32 961.188 570.432 961.114 570.565C961.039 570.698 961 570.848 961 571.001C961 571.154 961.039 571.304 961.114 571.437C961.188 571.571 961.296 571.683 961.426 571.763L964.034 573.374C964.055 573.627 964.08 573.88 964.108 574.132L961.866 576.219C961.755 576.323 961.671 576.454 961.624 576.599C961.577 576.744 961.568 576.899 961.598 577.049C961.628 577.198 961.695 577.338 961.794 577.454C961.893 577.57 962.02 577.659 962.164 577.713L965.029 578.782C965.1 579.03 965.175 579.276 965.253 579.52L963.466 581.998C963.377 582.122 963.32 582.267 963.303 582.418C963.285 582.57 963.306 582.724 963.365 582.865C963.424 583.006 963.517 583.13 963.637 583.224C963.757 583.319 963.9 583.381 964.051 583.406L967.071 583.896C967.189 584.125 967.31 584.35 967.435 584.574L966.165 587.354C966.101 587.493 966.074 587.646 966.086 587.798C966.099 587.95 966.15 588.097 966.235 588.224C966.409 588.483 966.703 588.634 967.013 588.621L970.077 588.514C970.237 588.713 970.398 588.908 970.561 589.102L969.858 592.083C969.787 592.385 969.877 592.701 970.097 592.921C970.316 593.142 970.635 593.23 970.938 593.159L973.924 592.457C974.118 592.622 974.314 592.782 974.513 592.939L974.406 596C974.4 596.152 974.434 596.304 974.503 596.44C974.573 596.576 974.676 596.692 974.804 596.776C974.931 596.861 975.078 596.912 975.23 596.924C975.382 596.936 975.535 596.909 975.675 596.846L978.46 595.579C978.684 595.703 978.91 595.824 979.138 595.942L979.631 598.956C979.656 599.106 979.719 599.248 979.814 599.368C979.909 599.487 980.032 599.581 980.174 599.639C980.315 599.698 980.469 599.719 980.621 599.702C980.772 599.684 980.917 599.629 981.042 599.54L983.523 597.755C983.769 597.833 984.015 597.908 984.263 597.98L985.334 600.838C985.443 601.129 985.694 601.344 986 601.403C986.15 601.433 986.305 601.424 986.45 601.377C986.596 601.33 986.727 601.247 986.831 601.135L988.921 598.898C989.174 598.927 989.428 598.951 989.682 598.974L991.296 601.576C991.376 601.706 991.489 601.813 991.622 601.887C991.756 601.961 991.906 602 992.059 602C992.211 602 992.362 601.961 992.495 601.887C992.629 601.813 992.741 601.706 992.821 601.576L994.436 598.974C994.689 598.952 994.942 598.926 995.195 598.898L997.285 601.135C997.497 601.363 997.812 601.464 998.116 601.403C998.266 601.373 998.406 601.306 998.523 601.207C998.639 601.108 998.729 600.981 998.782 600.838L999.853 597.98C1000.1 597.908 1000.35 597.833 1000.59 597.755L1003.07 599.54C1003.2 599.629 1003.34 599.685 1003.5 599.702C1003.65 599.72 1003.8 599.698 1003.94 599.64C1004.08 599.581 1004.21 599.488 1004.3 599.368C1004.4 599.248 1004.46 599.106 1004.48 598.956L1004.98 595.942C1005.21 595.824 1005.43 595.701 1005.66 595.579L1008.44 596.846C1008.58 596.909 1008.73 596.936 1008.89 596.924C1009.04 596.912 1009.19 596.861 1009.31 596.776C1009.44 596.692 1009.54 596.576 1009.61 596.44C1009.68 596.304 1009.72 596.152 1009.71 596L1009.6 592.939C1009.8 592.781 1010 592.622 1010.19 592.457L1013.18 593.159C1013.33 593.194 1013.48 593.191 1013.63 593.149C1013.78 593.108 1013.91 593.029 1014.02 592.921C1014.24 592.701 1014.33 592.385 1014.26 592.083L1013.55 589.102C1013.72 588.908 1013.88 588.713 1014.04 588.514L1017.1 588.621C1017.25 588.627 1017.41 588.594 1017.54 588.524C1017.68 588.454 1017.79 588.351 1017.88 588.224C1018.05 587.966 1018.08 587.637 1017.95 587.354L1016.68 584.574C1016.8 584.35 1016.93 584.125 1017.04 583.896L1020.06 583.406C1020.21 583.381 1020.36 583.319 1020.48 583.224C1020.6 583.129 1020.69 583.006 1020.75 582.864C1020.81 582.723 1020.83 582.57 1020.81 582.418C1020.79 582.266 1020.74 582.122 1020.65 581.998L1018.86 579.52C1018.94 579.276 1019.01 579.03 1019.09 578.782L1021.95 577.713C1022.24 577.604 1022.46 577.353 1022.52 577.048C1022.55 576.899 1022.54 576.744 1022.49 576.599C1022.44 576.453 1022.36 576.323 1022.25 576.219L1020.01 574.132C1020.03 573.88 1020.06 573.627 1020.08 573.374L1022.69 571.763C1022.82 571.683 1022.93 571.571 1023 571.437C1023.08 571.304 1023.11 571.154 1023.11 571.001C1023.11 570.849 1023.08 570.699 1023 570.565C1022.93 570.432 1022.82 570.32 1022.69 570.24ZM1005.24 591.832C1004.76 591.729 1004.34 591.44 1004.07 591.029C1003.81 590.618 1003.72 590.119 1003.82 589.641C1003.87 589.404 1003.97 589.18 1004.11 588.981C1004.24 588.782 1004.42 588.611 1004.62 588.48C1004.82 588.348 1005.05 588.258 1005.29 588.215C1005.53 588.171 1005.77 588.175 1006.01 588.226C1006.49 588.329 1006.91 588.617 1007.17 589.028C1007.44 589.438 1007.53 589.937 1007.43 590.415C1007.32 590.893 1007.04 591.31 1006.63 591.576C1006.21 591.842 1005.71 591.934 1005.24 591.832ZM1004.35 585.85C1004.13 585.804 1003.91 585.801 1003.69 585.841C1003.48 585.88 1003.27 585.963 1003.08 586.083C1002.9 586.203 1002.74 586.358 1002.61 586.54C1002.49 586.721 1002.4 586.926 1002.35 587.142L1001.43 591.454C998.484 592.786 995.289 593.472 992.057 593.468C988.752 593.472 985.487 592.753 982.49 591.363L981.565 587.051C981.519 586.835 981.431 586.631 981.306 586.449C981.18 586.268 981.02 586.112 980.835 585.992C980.65 585.873 980.442 585.79 980.225 585.751C980.008 585.711 979.785 585.714 979.569 585.76L975.755 586.578C975.046 585.849 974.387 585.074 973.783 584.257H992.341C992.551 584.257 992.691 584.219 992.691 584.029V577.476C992.691 577.285 992.551 577.247 992.341 577.247H986.913V573.094H992.783C993.319 573.094 995.649 573.247 996.393 576.218C996.627 577.132 997.139 580.106 997.489 581.057C997.838 582.125 999.258 584.257 1000.77 584.257H1010.02C1010.13 584.257 1010.24 584.246 1010.36 584.224C1009.71 585.094 1009.01 585.917 1008.25 586.687L1004.35 585.85ZM978.683 591.742C978.446 591.793 978.201 591.796 977.963 591.753C977.724 591.709 977.497 591.619 977.294 591.488C977.09 591.356 976.915 591.186 976.777 590.987C976.64 590.788 976.543 590.563 976.492 590.327C976.389 589.849 976.481 589.35 976.746 588.939C977.012 588.528 977.43 588.239 977.908 588.136C978.382 588.046 978.873 588.144 979.275 588.411C979.677 588.677 979.959 589.09 980.06 589.561C980.161 590.032 980.074 590.524 979.816 590.932C979.559 591.339 979.152 591.63 978.683 591.742ZM971.643 563.246C971.841 563.693 971.854 564.2 971.678 564.656C971.502 565.113 971.152 565.48 970.704 565.679C970.483 565.777 970.244 565.831 970.002 565.837C969.76 565.843 969.519 565.801 969.293 565.714C969.067 565.626 968.86 565.496 968.685 565.329C968.509 565.162 968.369 564.962 968.271 564.741C968.072 564.294 968.06 563.787 968.236 563.331C968.411 562.874 968.762 562.507 969.209 562.308C969.43 562.21 969.669 562.156 969.911 562.15C970.154 562.144 970.395 562.186 970.621 562.273C970.847 562.36 971.053 562.491 971.229 562.658C971.404 562.825 971.545 563.025 971.643 563.246ZM969.479 568.366L973.452 566.604C973.86 566.423 974.179 566.087 974.34 565.671C974.5 565.256 974.488 564.793 974.307 564.386L973.489 562.539H976.707V577.019H970.214C969.639 574.996 969.347 572.904 969.349 570.801C969.349 569.978 969.394 569.165 969.479 568.366ZM986.914 566.96V562.692H994.578C994.974 562.692 997.373 563.148 997.373 564.939C997.373 566.426 995.533 566.959 994.02 566.959H986.914V566.96ZM1014.77 570.801C1014.77 571.368 1014.74 571.928 1014.7 572.484H1012.37C1012.14 572.484 1012.05 572.637 1012.05 572.865V573.933C1012.05 576.447 1010.63 576.994 1009.38 577.133C1008.2 577.266 1006.88 576.638 1006.72 575.914C1006.02 571.989 1004.86 571.151 1003.02 569.702C1005.3 568.255 1007.68 566.12 1007.68 563.263C1007.68 560.177 1005.56 558.234 1004.11 557.28C1002.09 555.947 999.842 555.68 999.237 555.68H975.141C978.409 552.04 982.837 549.461 987.845 548.523L990.686 551.497C990.838 551.657 991.02 551.785 991.222 551.874C991.424 551.963 991.642 552.012 991.863 552.017C992.084 552.022 992.303 551.983 992.509 551.904C992.715 551.824 992.903 551.704 993.063 551.552L996.241 548.518C1002.9 549.755 1008.54 553.893 1011.79 559.569L1009.61 564.474C1009.43 564.882 1009.42 565.344 1009.58 565.76C1009.74 566.175 1010.06 566.511 1010.47 566.692L1014.66 568.549C1014.73 569.291 1014.77 570.041 1014.77 570.801ZM990.687 545.993C990.862 545.826 991.068 545.695 991.294 545.607C991.52 545.52 991.761 545.478 992.003 545.483C992.245 545.489 992.484 545.542 992.706 545.64C992.927 545.737 993.127 545.878 993.294 546.053C993.632 546.407 993.816 546.88 993.804 547.369C993.793 547.858 993.587 548.322 993.233 548.66C993.058 548.827 992.852 548.958 992.626 549.046C992.4 549.133 992.159 549.175 991.917 549.17C991.675 549.164 991.436 549.111 991.214 549.013C990.993 548.915 990.793 548.775 990.626 548.599C990.288 548.245 990.105 547.772 990.116 547.284C990.128 546.795 990.333 546.331 990.687 545.993ZM1012.28 563.336C1012.37 563.114 1012.51 562.915 1012.69 562.748C1012.87 562.581 1013.07 562.45 1013.3 562.363C1013.52 562.276 1013.76 562.234 1014.01 562.24C1014.25 562.246 1014.49 562.3 1014.71 562.398C1015.16 562.597 1015.51 562.964 1015.68 563.421C1015.86 563.877 1015.85 564.384 1015.65 564.831C1015.55 565.052 1015.41 565.252 1015.23 565.419C1015.06 565.586 1014.85 565.717 1014.63 565.804C1014.4 565.891 1014.16 565.933 1013.92 565.927C1013.67 565.921 1013.44 565.867 1013.21 565.769C1012.77 565.57 1012.42 565.202 1012.24 564.746C1012.07 564.29 1012.08 563.783 1012.28 563.336Z"
      fill="white"
    />
    <path
      d="M240 362H146V378"
      stroke="#AFB5B6"
      strokeWidth="3"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeDasharray="0.01 10"
    />
    <defs>
      <filter
        id="filter0_ddd_1112_10475"
        x="208"
        y="151"
        width="880"
        height="531"
        filterUnits="userSpaceOnUse"
        colorInterpolationFilters="sRGB"
      >
        <feFlood floodOpacity="0" result="BackgroundImageFix" />
        <feColorMatrix
          in="SourceAlpha"
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          result="hardAlpha"
        />
        <feOffset />
        <feColorMatrix
          type="matrix"
          values="0 0 0 0 0.0784314 0 0 0 0 0.113725 0 0 0 0 0.121569 0 0 0 0.1 0"
        />
        <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1112_10475" />
        <feColorMatrix
          in="SourceAlpha"
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          result="hardAlpha"
        />
        <feOffset dy="10" />
        <feGaussianBlur stdDeviation="10" />
        <feColorMatrix
          type="matrix"
          values="0 0 0 0 0.0784314 0 0 0 0 0.113725 0 0 0 0 0.121569 0 0 0 0.1 0"
        />
        <feBlend
          mode="normal"
          in2="effect1_dropShadow_1112_10475"
          result="effect2_dropShadow_1112_10475"
        />
        <feColorMatrix
          in="SourceAlpha"
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          result="hardAlpha"
        />
        <feOffset dy="20" />
        <feGaussianBlur stdDeviation="20" />
        <feColorMatrix
          type="matrix"
          values="0 0 0 0 0.0784314 0 0 0 0 0.113725 0 0 0 0 0.121569 0 0 0 0.1 0"
        />
        <feBlend
          mode="normal"
          in2="effect2_dropShadow_1112_10475"
          result="effect3_dropShadow_1112_10475"
        />
        <feBlend
          mode="normal"
          in="SourceGraphic"
          in2="effect3_dropShadow_1112_10475"
          result="shape"
        />
      </filter>
      <linearGradient
        id="paint0_linear_1112_10475"
        x1="218"
        y1="386"
        x2="74"
        y2="530"
        gradientUnits="userSpaceOnUse"
      >
        <stop stopColor="#FCFDFD" />
        <stop offset="1" stopColor="#F4F5F6" />
      </linearGradient>
    </defs>
  </svg>
);

RustInactive.propTypes = {
  className: PropTypes.string,
};

RustInactive.defaultProps = {
  className: null,
};

export default RustInactive;
