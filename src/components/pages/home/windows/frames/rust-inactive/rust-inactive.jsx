import PropTypes from 'prop-types';
import React from 'react';

const RustInactive = ({ className }) => (
  <svg
    className={className}
    width="1731"
    height="857"
    viewBox="0 0 1731 857"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <circle cx="146" cy="458" r="72" fill="url(#paint0_linear_1112_10475)" />
    <text
      fill="#181A1B"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Poppins"
      fontSize="14"
      fontWeight="500"
      letterSpacing="0em"
    >
      <tspan x="131.09" y="419.9">
        CPU
      </tspan>
    </text>
    <text
      fill="#181A1B"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Poppins"
      fontSize="44"
      fontWeight="300"
      letterSpacing="0em"
    >
      <tspan x="102.145" y="465.4">
        60%
      </tspan>
    </text>
    <text
      fill="#181A1B"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Poppins"
      fontSize="13"
      letterSpacing="0em"
    >
      <tspan x="117.704" y="488.55">
        Address:&#10;
      </tspan>
      <tspan x="114.117" y="504.55">
        0x4553e0
      </tspan>
    </text>
    <g filter="url(#filter0_ddd_1112_10475)">
      <rect x="288" y="171" width="800" height="451" rx="12" fill="#181A1B" />
    </g>
    <rect opacity="0.3" x="288" y="350" width="800" height="24" fill="#FD0054" />
    <rect opacity="0.1" x="337" y="208" width="1" height="414" fill="white" />
    <text
      opacity="0.4"
      fill="white"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Roboto Mono"
      fontSize="14"
      letterSpacing="0em"
    >
      <tspan x="304.184" y="239.938">
        73&#10;
      </tspan>
      <tspan x="304.184" y="260.938">
        74&#10;
      </tspan>
      <tspan x="304.184" y="281.938">
        75&#10;
      </tspan>
      <tspan x="304.184" y="302.938">
        76&#10;
      </tspan>
      <tspan x="304.184" y="323.938">
        77&#10;
      </tspan>
      <tspan x="304.184" y="344.938">
        78&#10;
      </tspan>
      <tspan x="304.184" y="365.938">
        79&#10;
      </tspan>
      <tspan x="304.184" y="386.938">
        80&#10;
      </tspan>
      <tspan x="304.184" y="407.938">
        81&#10;
      </tspan>
      <tspan x="304.184" y="428.938">
        82&#10;
      </tspan>
      <tspan x="304.184" y="449.938">
        83&#10;
      </tspan>
      <tspan x="304.184" y="470.938">
        84&#10;
      </tspan>
      <tspan x="304.184" y="491.938">
        85&#10;
      </tspan>
      <tspan x="304.184" y="512.938">
        86&#10;
      </tspan>
      <tspan x="304.184" y="533.938">
        87&#10;
      </tspan>
      <tspan x="304.184" y="554.938">
        88&#10;
      </tspan>
      <tspan x="304.184" y="575.938">
        89&#10;
      </tspan>
      <tspan x="304.184" y="596.938">
        90
      </tspan>
    </text>
    <path
      d="M288 183C288 176.373 293.373 171 300 171H1076C1082.63 171 1088 176.373 1088 183V207H288V183Z"
      fill="#181A1B"
    />
    <text
      fill="white"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Poppins"
      fontSize="14"
      fontWeight="600"
      letterSpacing="0em"
    >
      <tspan x="672.359" y="193.9">
        Rust
      </tspan>
    </text>
    <circle cx="310" cy="189" r="6" fill="#FD0054" />
    <circle cx="330" cy="189" r="6" fill="#FFB31A" />
    <circle cx="350" cy="189" r="6" fill="#00CC21" />
    <rect opacity="0.1" x="288" y="207" width="800" height="1" fill="white" />
    <text
      fill="white"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Roboto Mono"
      fontSize="14"
      letterSpacing="0em"
    >
      <tspan x="412.449" y="260.938">
        {' '}
      </tspan>
      <tspan x="471.307" y="260.938">
        (xs:{' '}
      </tspan>
      <tspan x="538.572" y="260.938">
        &#60;
      </tspan>
      <tspan x="572.205" y="260.938">
        &#60;$kind&#62;&#62;, k:{' '}
      </tspan>
      <tspan x="723.553" y="260.938">
        ) -&#62;{' '}
      </tspan>
      <tspan x="790.818" y="260.938">
        &#60;
      </tspan>
      <tspan x="841.268" y="260.938">
        &#62; {'{'}&#10;
      </tspan>
      <tspan x="362" y="281.938">
        {' '}
      </tspan>
      <tspan x="454.49" y="281.938">
        (xs.
      </tspan>
      <tspan x="513.348" y="281.938">
        (){' '}
      </tspan>
      <tspan x="555.389" y="281.938">
        {' '}
        k);&#10;
      </tspan>
      <tspan x="362" y="302.938" />
      <tspan x="362" y="323.938">
        {' '}
      </tspan>
      <tspan x="420.857" y="323.938">
        {' '}
        n_per_cluster:{' '}
      </tspan>
      <tspan x="614.246" y="323.938">
        {' '}
        xs.
      </tspan>
      <tspan x="673.104" y="323.938">
        (){' '}
      </tspan>
      <tspan x="706.736" y="323.938">
        {' '}
        k;&#10;
      </tspan>
      <tspan x="362" y="344.938">
        {' '}
      </tspan>
      <tspan x="420.857" y="344.938">
        {' '}
        centroids:{' '}
      </tspan>
      <tspan x="580.613" y="344.938">
        &#60;$kind
      </tspan>
      <tspan x="362" y="365.938">
        {'        '}(
      </tspan>
      <tspan x="446.082" y="365.938">
        ..k).
      </tspan>
      <tspan x="513.348" y="365.938">
        (
      </tspan>
      <tspan x="530.164" y="365.938">
        j
      </tspan>
      <tspan x="546.98" y="365.938">
        {' '}
        xs[j{' '}
      </tspan>
      <tspan x="605.838" y="365.938">
        {' '}
        n_per_cluster].
      </tspan>
      <tspan x="782.41" y="365.938">
        ()).
      </tspan>
      <tspan x="874.9" y="365.938">
        ();&#10;
      </tspan>
      <tspan x="362" y="386.938" />
      <tspan x="362" y="407.938">
        {' '}
      </tspan>
      <tspan x="454.49" y="407.938">
        {' '}
        clustering{' '}
      </tspan>
      <tspan x="563.797" y="407.938">
        {' '}
      </tspan>
      <tspan x="715.145" y="407.938">
        (
      </tspan>
      <tspan x="731.961" y="407.938">
        xs,{' '}
      </tspan>
      <tspan x="774.002" y="407.938">
        centroids);&#10;
      </tspan>
      <tspan x="362" y="428.938" />
      <tspan x="362" y="449.938">
        {' '}
      </tspan>
      <tspan x="429.266" y="449.938">
        {' '}
        {'{'}&#10;
      </tspan>
      <tspan x="362" y="470.938">
        {' '}
      </tspan>
      <tspan x="454.49" y="470.938">
        {' '}
        centroids{' '}
      </tspan>
      <tspan x="555.389" y="470.938">
        {' '}
      </tspan>
      <tspan x="723.553" y="470.938">
        (
      </tspan>
      <tspan x="740.369" y="470.938">
        xs,{' '}
      </tspan>
      <tspan x="782.41" y="470.938">
        clustering, k);&#10;
      </tspan>
      <tspan x="362" y="491.938">
        {' '}
      </tspan>
      <tspan x="454.49" y="491.938">
        {' '}
        new_clustering{' '}
      </tspan>
      <tspan x="597.43" y="491.938">
        {' '}
      </tspan>
      <tspan x="748.777" y="491.938">
        (
      </tspan>
      <tspan x="765.594" y="491.938">
        xs,{' '}
      </tspan>
      <tspan x="807.635" y="491.938">
        centroids);&#10;
      </tspan>
      <tspan x="362" y="512.938" />
      <tspan x="362" y="533.938">
        {' '}
      </tspan>
      <tspan x="446.082" y="533.938">
        {' '}
        new_clustering&#10;
      </tspan>
      <tspan x="362" y="554.938">
        {' '}
      </tspan>
      <tspan x="504.939" y="554.938">
        ()&#10;
      </tspan>
      <tspan x="362" y="575.938">
        {' '}
      </tspan>
      <tspan x="496.531" y="575.938">
        (clustering.
      </tspan>
      <tspan x="631.062" y="575.938">
        ())&#10;
      </tspan>
      <tspan x="362" y="596.938">
        {'            '}.
      </tspan>
      <tspan x="496.531" y="596.938">
        (
      </tspan>
      <tspan x="513.348" y="596.938">
        (
      </tspan>
      <tspan x="530.164" y="596.938">
        za,{' '}
      </tspan>
      <tspan x="572.205" y="596.938">
        zb)| za{' '}
      </tspan>
      <tspan x="656.287" y="596.938">
        {' '}
        zb)
      </tspan>
    </text>
    <text
      fill="#798486"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Roboto Mono"
      fontSize="14"
      letterSpacing="0em"
    >
      <tspan x="362" y="239.938">
        /// Assign the N D-dimensional data, `xs`, to `k` clusters using K-Means clustering&#10;
      </tspan>
    </text>
    <text
      fill="#FFD500"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Roboto Mono"
      fontSize="14"
      letterSpacing="0em"
    >
      <tspan x="362" y="260.938">
        pub fn
      </tspan>
      <tspan x="513.348" y="260.938">
        Vec
      </tspan>
      <tspan x="546.98" y="260.938">
        Vec
      </tspan>
      <tspan x="681.512" y="260.938">
        usize
      </tspan>
      <tspan x="765.594" y="260.938">
        Vec
      </tspan>
      <tspan x="799.227" y="260.938">
        usize
      </tspan>
      <tspan x="538.572" y="281.938">
        &#62;=
      </tspan>
      <tspan x="395.633" y="323.938">
        let
      </tspan>
      <tspan x="555.389" y="323.938">
        usize =
      </tspan>
      <tspan x="698.328" y="323.938">
        /
      </tspan>
      <tspan x="395.633" y="344.938">
        let
      </tspan>
      <tspan x="521.756" y="344.938">
        Vec&#60;Vec
      </tspan>
      <tspan x="631.062" y="344.938">
        &#62;&#62; =&#10;
      </tspan>
      <tspan x="521.756" y="365.938">
        |
      </tspan>
      <tspan x="538.572" y="365.938">
        |
      </tspan>
      <tspan x="597.43" y="365.938">
        *
      </tspan>
      <tspan x="395.633" y="407.938">
        let mut
      </tspan>
      <tspan x="555.389" y="407.938">
        =
      </tspan>
      <tspan x="723.553" y="407.938">
        &#38;
      </tspan>
      <tspan x="765.594" y="407.938">
        &#38;
      </tspan>
      <tspan x="395.633" y="449.938">
        loop
      </tspan>
      <tspan x="429.266" y="470.938">
        let
      </tspan>
      <tspan x="546.98" y="470.938">
        =
      </tspan>
      <tspan x="731.961" y="470.938">
        &#38;
      </tspan>
      <tspan x="774.002" y="470.938">
        &#38;
      </tspan>
      <tspan x="429.266" y="491.938">
        let
      </tspan>
      <tspan x="589.021" y="491.938">
        =
      </tspan>
      <tspan x="757.186" y="491.938">
        &#38;
      </tspan>
      <tspan x="799.227" y="491.938">
        &#38;
      </tspan>
      <tspan x="429.266" y="533.938">
        if
      </tspan>
      <tspan x="471.307" y="596.938">
        all
      </tspan>
      <tspan x="504.939" y="596.938">
        |
      </tspan>
      <tspan x="521.756" y="596.938">
        &#38;
      </tspan>
      <tspan x="563.797" y="596.938">
        &#38;
      </tspan>
      <tspan x="639.471" y="596.938">
        ==
      </tspan>
    </text>
    <text
      fill="#FD6A00"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Roboto Mono"
      fontSize="14"
      letterSpacing="0em"
    >
      <tspan x="420.857" y="260.938">
        kmeans
      </tspan>
      <tspan x="488.123" y="281.938">
        len
      </tspan>
      <tspan x="647.879" y="323.938">
        len
      </tspan>
      <tspan x="488.123" y="365.938">
        map
      </tspan>
      <tspan x="740.369" y="365.938">
        clone
      </tspan>
      <tspan x="816.043" y="365.938">
        collect
      </tspan>
      <tspan x="572.205" y="407.938">
        nearest_centroids
      </tspan>
      <tspan x="563.797" y="470.938">
        recompute_centroids
      </tspan>
      <tspan x="605.838" y="491.938">
        nearest_centroids
      </tspan>
      <tspan x="462.898" y="554.938">
        .iter
      </tspan>
      <tspan x="462.898" y="575.938">
        .zip
      </tspan>
      <tspan x="597.43" y="575.938">
        iter
      </tspan>
    </text>
    <text
      fill="#F14AFF"
      xmlSpace="preserve"
      style={{ whiteSpace: 'pre' }}
      fontFamily="Roboto Mono"
      fontSize="14"
      letterSpacing="0em"
    >
      <tspan x="395.633" y="281.938">
        assert!
      </tspan>
      <tspan x="437.674" y="365.938">
        0
      </tspan>
    </text>
    <path
      d="M1062.69 570.24L1060.08 568.628C1060.06 568.375 1060.03 568.123 1060.01 567.87L1062.25 565.784C1062.48 565.572 1062.58 565.258 1062.52 564.954C1062.49 564.804 1062.42 564.664 1062.32 564.548C1062.22 564.432 1062.09 564.343 1061.95 564.289L1059.09 563.22C1059.01 562.973 1058.94 562.727 1058.86 562.482L1060.65 560.005C1060.74 559.881 1060.79 559.736 1060.81 559.585C1060.83 559.433 1060.81 559.279 1060.75 559.138C1060.69 558.997 1060.6 558.873 1060.48 558.779C1060.36 558.684 1060.22 558.621 1060.06 558.597L1057.04 558.106C1056.93 557.879 1056.81 557.653 1056.68 557.429L1057.95 554.648C1058.01 554.509 1058.04 554.356 1058.03 554.204C1058.02 554.052 1057.97 553.905 1057.88 553.778C1057.8 553.651 1057.68 553.548 1057.54 553.478C1057.41 553.409 1057.26 553.375 1057.1 553.381L1054.04 553.488C1053.88 553.29 1053.72 553.094 1053.55 552.901L1054.26 549.92C1054.29 549.772 1054.29 549.617 1054.25 549.47C1054.21 549.323 1054.13 549.189 1054.02 549.081C1053.91 548.973 1053.78 548.894 1053.63 548.852C1053.48 548.811 1053.33 548.807 1053.18 548.842L1050.19 549.545C1050 549.381 1049.8 549.22 1049.6 549.061L1049.71 546.001C1049.72 545.849 1049.68 545.697 1049.61 545.561C1049.54 545.425 1049.44 545.309 1049.31 545.224C1049.19 545.139 1049.04 545.088 1048.89 545.076C1048.73 545.064 1048.58 545.091 1048.44 545.155L1045.66 546.422C1045.43 546.299 1045.21 546.178 1044.98 546.059L1044.49 543.044C1044.46 542.893 1044.4 542.751 1044.3 542.632C1044.21 542.512 1044.08 542.419 1043.94 542.36C1043.8 542.302 1043.65 542.281 1043.5 542.298C1043.34 542.316 1043.2 542.372 1043.08 542.461L1040.59 544.244C1040.35 544.166 1040.1 544.092 1039.85 544.021L1038.78 541.161C1038.73 541.018 1038.64 540.89 1038.52 540.791C1038.41 540.692 1038.27 540.624 1038.12 540.594C1037.97 540.564 1037.81 540.573 1037.67 540.62C1037.52 540.667 1037.39 540.751 1037.29 540.863L1035.2 543.102C1034.94 543.074 1034.69 543.048 1034.44 543.028L1032.82 540.424C1032.74 540.294 1032.63 540.187 1032.5 540.113C1032.36 540.039 1032.21 540 1032.06 540C1031.91 540 1031.76 540.039 1031.62 540.113C1031.49 540.187 1031.38 540.294 1031.3 540.424L1029.68 543.028C1029.43 543.048 1029.17 543.074 1028.92 543.102L1026.83 540.863C1026.73 540.751 1026.6 540.668 1026.45 540.621C1026.3 540.574 1026.15 540.565 1026 540.595C1025.85 540.625 1025.71 540.692 1025.59 540.791C1025.48 540.891 1025.39 541.018 1025.33 541.161L1024.26 544.021C1024.02 544.092 1023.77 544.167 1023.52 544.244L1021.04 542.461C1020.92 542.372 1020.77 542.316 1020.62 542.299C1020.47 542.281 1020.32 542.303 1020.17 542.361C1020.03 542.419 1019.91 542.513 1019.81 542.632C1019.72 542.751 1019.66 542.893 1019.63 543.044L1019.14 546.059C1018.91 546.177 1018.69 546.299 1018.46 546.422L1015.67 545.155C1015.54 545.091 1015.38 545.064 1015.23 545.077C1015.08 545.089 1014.93 545.14 1014.8 545.225C1014.55 545.397 1014.39 545.691 1014.41 546.001L1014.51 549.061C1014.31 549.22 1014.12 549.381 1013.92 549.545L1010.94 548.842C1010.79 548.807 1010.63 548.811 1010.49 548.853C1010.34 548.895 1010.21 548.973 1010.1 549.081C1009.99 549.189 1009.91 549.323 1009.87 549.47C1009.83 549.616 1009.82 549.772 1009.86 549.92L1010.56 552.901C1010.4 553.094 1010.24 553.29 1010.08 553.488L1007.01 553.381C1006.86 553.375 1006.71 553.409 1006.57 553.478C1006.44 553.548 1006.32 553.651 1006.23 553.778C1006.15 553.905 1006.1 554.052 1006.09 554.204C1006.07 554.356 1006.1 554.509 1006.16 554.648L1007.43 557.429C1007.31 557.653 1007.19 557.879 1007.07 558.106L1004.05 558.597C1003.9 558.621 1003.76 558.684 1003.64 558.779C1003.52 558.874 1003.42 558.997 1003.37 559.138C1003.31 559.279 1003.29 559.433 1003.3 559.585C1003.32 559.736 1003.38 559.881 1003.47 560.005L1005.25 562.482C1005.18 562.727 1005.1 562.973 1005.03 563.22L1002.16 564.289C1002.02 564.343 1001.89 564.432 1001.79 564.548C1001.69 564.664 1001.63 564.804 1001.6 564.954C1001.57 565.104 1001.58 565.259 1001.62 565.404C1001.67 565.549 1001.75 565.68 1001.87 565.784L1004.11 567.87C1004.08 568.122 1004.05 568.375 1004.03 568.628L1001.43 570.24C1001.3 570.32 1001.19 570.432 1001.11 570.565C1001.04 570.698 1001 570.848 1001 571.001C1001 571.154 1001.04 571.304 1001.11 571.437C1001.19 571.571 1001.3 571.683 1001.43 571.763L1004.03 573.374C1004.05 573.627 1004.08 573.88 1004.11 574.132L1001.87 576.219C1001.75 576.323 1001.67 576.454 1001.62 576.599C1001.58 576.744 1001.57 576.899 1001.6 577.049C1001.63 577.198 1001.7 577.338 1001.79 577.454C1001.89 577.57 1002.02 577.659 1002.16 577.713L1005.03 578.782C1005.1 579.03 1005.18 579.276 1005.25 579.52L1003.47 581.998C1003.38 582.122 1003.32 582.267 1003.3 582.418C1003.28 582.57 1003.31 582.724 1003.37 582.865C1003.42 583.006 1003.52 583.13 1003.64 583.224C1003.76 583.319 1003.9 583.381 1004.05 583.406L1007.07 583.896C1007.19 584.125 1007.31 584.35 1007.43 584.574L1006.16 587.354C1006.1 587.493 1006.07 587.646 1006.09 587.798C1006.1 587.95 1006.15 588.097 1006.24 588.224C1006.41 588.483 1006.7 588.634 1007.01 588.621L1010.08 588.514C1010.24 588.713 1010.4 588.908 1010.56 589.102L1009.86 592.083C1009.79 592.385 1009.88 592.701 1010.1 592.921C1010.32 593.142 1010.64 593.23 1010.94 593.159L1013.92 592.457C1014.12 592.622 1014.31 592.782 1014.51 592.939L1014.41 596C1014.4 596.152 1014.43 596.304 1014.5 596.44C1014.57 596.576 1014.68 596.692 1014.8 596.776C1014.93 596.861 1015.08 596.912 1015.23 596.924C1015.38 596.936 1015.54 596.909 1015.67 596.846L1018.46 595.579C1018.68 595.703 1018.91 595.824 1019.14 595.942L1019.63 598.956C1019.66 599.106 1019.72 599.248 1019.81 599.368C1019.91 599.487 1020.03 599.581 1020.17 599.639C1020.31 599.698 1020.47 599.719 1020.62 599.702C1020.77 599.684 1020.92 599.629 1021.04 599.54L1023.52 597.755C1023.77 597.833 1024.02 597.908 1024.26 597.98L1025.33 600.838C1025.44 601.129 1025.69 601.344 1026 601.403C1026.15 601.433 1026.3 601.424 1026.45 601.377C1026.6 601.33 1026.73 601.247 1026.83 601.135L1028.92 598.898C1029.17 598.927 1029.43 598.951 1029.68 598.974L1031.3 601.576C1031.38 601.706 1031.49 601.813 1031.62 601.887C1031.76 601.961 1031.91 602 1032.06 602C1032.21 602 1032.36 601.961 1032.5 601.887C1032.63 601.813 1032.74 601.706 1032.82 601.576L1034.44 598.974C1034.69 598.952 1034.94 598.926 1035.2 598.898L1037.29 601.135C1037.5 601.363 1037.81 601.464 1038.12 601.403C1038.27 601.373 1038.41 601.306 1038.52 601.207C1038.64 601.108 1038.73 600.981 1038.78 600.838L1039.85 597.98C1040.1 597.908 1040.35 597.833 1040.59 597.755L1043.07 599.54C1043.2 599.629 1043.34 599.685 1043.5 599.702C1043.65 599.72 1043.8 599.698 1043.94 599.64C1044.08 599.581 1044.21 599.488 1044.3 599.368C1044.4 599.248 1044.46 599.106 1044.48 598.956L1044.98 595.942C1045.21 595.824 1045.43 595.701 1045.66 595.579L1048.44 596.846C1048.58 596.909 1048.73 596.936 1048.89 596.924C1049.04 596.912 1049.19 596.861 1049.31 596.776C1049.44 596.692 1049.54 596.576 1049.61 596.44C1049.68 596.304 1049.72 596.152 1049.71 596L1049.6 592.939C1049.8 592.781 1050 592.622 1050.19 592.457L1053.18 593.159C1053.33 593.194 1053.48 593.191 1053.63 593.149C1053.78 593.108 1053.91 593.029 1054.02 592.921C1054.24 592.701 1054.33 592.385 1054.26 592.083L1053.55 589.102C1053.72 588.908 1053.88 588.713 1054.04 588.514L1057.1 588.621C1057.25 588.627 1057.41 588.594 1057.54 588.524C1057.68 588.454 1057.79 588.351 1057.88 588.224C1058.05 587.966 1058.08 587.637 1057.95 587.354L1056.68 584.574C1056.8 584.35 1056.93 584.125 1057.04 583.896L1060.06 583.406C1060.21 583.381 1060.36 583.319 1060.48 583.224C1060.6 583.129 1060.69 583.006 1060.75 582.864C1060.81 582.723 1060.83 582.57 1060.81 582.418C1060.79 582.266 1060.74 582.122 1060.65 581.998L1058.86 579.52C1058.94 579.276 1059.01 579.03 1059.09 578.782L1061.95 577.713C1062.24 577.604 1062.46 577.353 1062.52 577.048C1062.55 576.899 1062.54 576.744 1062.49 576.599C1062.44 576.453 1062.36 576.323 1062.25 576.219L1060.01 574.132C1060.03 573.88 1060.06 573.627 1060.08 573.374L1062.69 571.763C1062.82 571.683 1062.93 571.571 1063 571.437C1063.08 571.304 1063.11 571.154 1063.11 571.001C1063.11 570.849 1063.08 570.699 1063 570.565C1062.93 570.432 1062.82 570.32 1062.69 570.24ZM1045.24 591.832C1044.76 591.729 1044.34 591.44 1044.07 591.029C1043.81 590.618 1043.72 590.119 1043.82 589.641C1043.87 589.404 1043.97 589.18 1044.11 588.981C1044.24 588.782 1044.42 588.611 1044.62 588.48C1044.82 588.348 1045.05 588.258 1045.29 588.215C1045.53 588.171 1045.77 588.175 1046.01 588.226C1046.49 588.329 1046.91 588.617 1047.17 589.028C1047.44 589.438 1047.53 589.937 1047.43 590.415C1047.32 590.893 1047.04 591.31 1046.63 591.576C1046.21 591.842 1045.71 591.934 1045.24 591.832ZM1044.35 585.85C1044.13 585.804 1043.91 585.801 1043.69 585.841C1043.48 585.88 1043.27 585.963 1043.08 586.083C1042.9 586.203 1042.74 586.358 1042.61 586.54C1042.49 586.721 1042.4 586.926 1042.35 587.142L1041.43 591.454C1038.48 592.786 1035.29 593.472 1032.06 593.468C1028.75 593.472 1025.49 592.753 1022.49 591.363L1021.57 587.051C1021.52 586.835 1021.43 586.631 1021.31 586.449C1021.18 586.268 1021.02 586.112 1020.83 585.992C1020.65 585.873 1020.44 585.79 1020.22 585.751C1020.01 585.711 1019.78 585.714 1019.57 585.76L1015.75 586.578C1015.05 585.849 1014.39 585.074 1013.78 584.257H1032.34C1032.55 584.257 1032.69 584.219 1032.69 584.029V577.476C1032.69 577.285 1032.55 577.247 1032.34 577.247H1026.91V573.094H1032.78C1033.32 573.094 1035.65 573.247 1036.39 576.218C1036.63 577.132 1037.14 580.106 1037.49 581.057C1037.84 582.125 1039.26 584.257 1040.77 584.257H1050.02C1050.13 584.257 1050.24 584.246 1050.36 584.224C1049.71 585.094 1049.01 585.917 1048.25 586.687L1044.35 585.85ZM1018.68 591.742C1018.45 591.793 1018.2 591.796 1017.96 591.753C1017.72 591.709 1017.5 591.619 1017.29 591.488C1017.09 591.356 1016.91 591.186 1016.78 590.987C1016.64 590.788 1016.54 590.563 1016.49 590.327C1016.39 589.849 1016.48 589.35 1016.75 588.939C1017.01 588.528 1017.43 588.239 1017.91 588.136C1018.38 588.046 1018.87 588.144 1019.28 588.411C1019.68 588.677 1019.96 589.09 1020.06 589.561C1020.16 590.032 1020.07 590.524 1019.82 590.932C1019.56 591.339 1019.15 591.63 1018.68 591.742ZM1011.64 563.246C1011.84 563.693 1011.85 564.2 1011.68 564.656C1011.5 565.113 1011.15 565.48 1010.7 565.679C1010.48 565.777 1010.24 565.831 1010 565.837C1009.76 565.843 1009.52 565.801 1009.29 565.714C1009.07 565.626 1008.86 565.496 1008.68 565.329C1008.51 565.162 1008.37 564.962 1008.27 564.741C1008.07 564.294 1008.06 563.787 1008.24 563.331C1008.41 562.874 1008.76 562.507 1009.21 562.308C1009.43 562.21 1009.67 562.156 1009.91 562.15C1010.15 562.144 1010.39 562.186 1010.62 562.273C1010.85 562.36 1011.05 562.491 1011.23 562.658C1011.4 562.825 1011.54 563.025 1011.64 563.246ZM1009.48 568.366L1013.45 566.604C1013.86 566.423 1014.18 566.087 1014.34 565.671C1014.5 565.256 1014.49 564.793 1014.31 564.386L1013.49 562.539H1016.71V577.019H1010.21C1009.64 574.996 1009.35 572.904 1009.35 570.801C1009.35 569.978 1009.39 569.165 1009.48 568.366ZM1026.91 566.96V562.692H1034.58C1034.97 562.692 1037.37 563.148 1037.37 564.939C1037.37 566.426 1035.53 566.959 1034.02 566.959H1026.91V566.96ZM1054.77 570.801C1054.77 571.368 1054.74 571.928 1054.7 572.484H1052.37C1052.14 572.484 1052.05 572.637 1052.05 572.865V573.933C1052.05 576.447 1050.63 576.994 1049.38 577.133C1048.2 577.266 1046.88 576.638 1046.72 575.914C1046.02 571.989 1044.86 571.151 1043.02 569.702C1045.3 568.255 1047.68 566.12 1047.68 563.263C1047.68 560.177 1045.56 558.234 1044.11 557.28C1042.09 555.947 1039.84 555.68 1039.24 555.68H1015.14C1018.41 552.04 1022.84 549.461 1027.85 548.523L1030.69 551.497C1030.84 551.657 1031.02 551.785 1031.22 551.874C1031.42 551.963 1031.64 552.012 1031.86 552.017C1032.08 552.022 1032.3 551.983 1032.51 551.904C1032.72 551.824 1032.9 551.704 1033.06 551.552L1036.24 548.518C1042.9 549.755 1048.54 553.893 1051.79 559.569L1049.61 564.474C1049.43 564.882 1049.42 565.344 1049.58 565.76C1049.74 566.175 1050.06 566.511 1050.47 566.692L1054.66 568.549C1054.73 569.291 1054.77 570.041 1054.77 570.801ZM1030.69 545.993C1030.86 545.826 1031.07 545.695 1031.29 545.607C1031.52 545.52 1031.76 545.478 1032 545.483C1032.25 545.489 1032.48 545.542 1032.71 545.64C1032.93 545.737 1033.13 545.878 1033.29 546.053C1033.63 546.407 1033.82 546.88 1033.8 547.369C1033.79 547.858 1033.59 548.322 1033.23 548.66C1033.06 548.827 1032.85 548.958 1032.63 549.046C1032.4 549.133 1032.16 549.175 1031.92 549.17C1031.67 549.164 1031.44 549.111 1031.21 549.013C1030.99 548.915 1030.79 548.775 1030.63 548.599C1030.29 548.245 1030.1 547.772 1030.12 547.284C1030.13 546.795 1030.33 546.331 1030.69 545.993ZM1052.28 563.336C1052.37 563.114 1052.51 562.915 1052.69 562.748C1052.87 562.581 1053.07 562.45 1053.3 562.363C1053.52 562.276 1053.76 562.234 1054.01 562.24C1054.25 562.246 1054.49 562.3 1054.71 562.398C1055.16 562.597 1055.51 562.964 1055.68 563.421C1055.86 563.877 1055.85 564.384 1055.65 564.831C1055.55 565.052 1055.41 565.252 1055.23 565.419C1055.06 565.586 1054.85 565.717 1054.63 565.804C1054.4 565.891 1054.16 565.933 1053.92 565.927C1053.67 565.921 1053.44 565.867 1053.21 565.769C1052.77 565.57 1052.42 565.202 1052.24 564.746C1052.07 564.29 1052.08 563.783 1052.28 563.336Z"
      fill="white"
    />
    <path
      d="M280 362H146V378"
      stroke="#AFB5B6"
      strokeWidth="3"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeDasharray="0.01 10"
    />
    <defs>
      <filter
        id="filter0_ddd_1112_10475"
        x="248"
        y="151"
        width="880"
        height="531"
        filterUnits="userSpaceOnUse"
        colorInterpolationFilters="sRGB"
      >
        <feFlood floodOpacity="0" result="BackgroundImageFix" />
        <feColorMatrix
          in="SourceAlpha"
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          result="hardAlpha"
        />
        <feOffset />
        <feColorMatrix
          type="matrix"
          values="0 0 0 0 0.0784314 0 0 0 0 0.113725 0 0 0 0 0.121569 0 0 0 0.1 0"
        />
        <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1112_10475" />
        <feColorMatrix
          in="SourceAlpha"
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          result="hardAlpha"
        />
        <feOffset dy="10" />
        <feGaussianBlur stdDeviation="10" />
        <feColorMatrix
          type="matrix"
          values="0 0 0 0 0.0784314 0 0 0 0 0.113725 0 0 0 0 0.121569 0 0 0 0.1 0"
        />
        <feBlend
          mode="normal"
          in2="effect1_dropShadow_1112_10475"
          result="effect2_dropShadow_1112_10475"
        />
        <feColorMatrix
          in="SourceAlpha"
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          result="hardAlpha"
        />
        <feOffset dy="20" />
        <feGaussianBlur stdDeviation="20" />
        <feColorMatrix
          type="matrix"
          values="0 0 0 0 0.0784314 0 0 0 0 0.113725 0 0 0 0 0.121569 0 0 0 0.1 0"
        />
        <feBlend
          mode="normal"
          in2="effect2_dropShadow_1112_10475"
          result="effect3_dropShadow_1112_10475"
        />
        <feBlend
          mode="normal"
          in="SourceGraphic"
          in2="effect3_dropShadow_1112_10475"
          result="shape"
        />
      </filter>
      <linearGradient
        id="paint0_linear_1112_10475"
        x1="218"
        y1="386"
        x2="74"
        y2="530"
        gradientUnits="userSpaceOnUse"
      >
        <stop stopColor="#FCFDFD" />
        <stop offset="1" stopColor="#F4F5F6" />
      </linearGradient>
    </defs>
  </svg>
);

RustInactive.propTypes = {
  className: PropTypes.string,
};

RustInactive.defaultProps = {
  className: null,
};

export default RustInactive;
